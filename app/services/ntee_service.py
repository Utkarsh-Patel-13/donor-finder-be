"""NTEE Code mapping service for expanding categorical codes to descriptive keywords."""

from typing import Dict, List


class NTEEService:
    """Service for mapping NTEE codes to descriptive keywords."""

    def __init__(self):
        self.ntee_mappings = self._build_ntee_mappings()
        self.subsection_mappings = self._build_subsection_mappings()

    def _build_ntee_mappings(self) -> Dict[str, str]:
        """Build comprehensive NTEE code to keywords mapping."""
        return {
            # Arts, Culture & Humanities (A)
            "A01": "alliances coordination arts culture humanities",
            "A02": "management technical assistance arts culture",
            "A03": "professional societies arts culture",
            "A05": "research institutes arts culture humanities",
            "A11": "single organization support arts culture",
            "A12": "fundraising arts culture humanities",
            "A19": "support arts culture humanities general",
            "A20": "arts education cultural programs community arts",
            "A23": "cultural ethnic awareness",
            "A24": "folk arts traditional culture heritage",
            "A25": "arts education cultural programs ethnic heritage",
            "A26": "arts councils cultural organizations",
            "A27": "community celebration cultural events",
            "A30": "media communications broadcasting journalism",
            "A31": "film video media production",
            "A32": "television broadcasting media",
            "A33": "printing publishing media",
            "A34": "radio broadcasting media",
            "A40": "visual arts galleries museums",
            "A50": "museums historical sites heritage preservation",
            "A51": "art museums galleries",
            "A52": "children youth museums education",
            "A54": "history museums historical preservation",
            "A56": "natural history science museums",
            "A57": "science technology museums",
            "A60": "performing arts theater music dance",
            "A61": "theater performing arts drama",
            "A62": "music musical arts symphony orchestra",
            "A63": "opera musical theater",
            "A65": "dance performing arts ballet",
            "A68": "music groups bands choirs",
            "A69": "performing arts centers venues",
            "A70": "humanities literature philosophy",
            "A80": "historical societies genealogy",
            "A82": "historical preservation heritage sites",
            "A84": "genealogy family history research",
            "A90": "arts services artists support",
            "A99": "arts culture humanities other",
            # Education (B)
            "B01": "alliances coordination education",
            "B02": "management technical assistance education",
            "B03": "professional societies education",
            "B05": "research institutes education",
            "B11": "single organization support education",
            "B12": "fundraising education",
            "B19": "support education general",
            "B20": "elementary secondary education K-12 schools",
            "B21": "preschool early childhood education child development",
            "B24": "primary elementary education K-5",
            "B25": "secondary education middle high school",
            "B28": "special education disabilities learning support",
            "B29": "charter schools alternative education",
            "B30": "vocational technical education job training",
            "B40": "higher education colleges universities",
            "B41": "community colleges education",
            "B42": "undergraduate colleges education",
            "B43": "universities higher education research",
            "B50": "graduate professional schools education",
            "B60": "adult continuing education lifelong learning",
            "B70": "libraries information services",
            "B80": "student services educational support",
            "B82": "scholarships student aid financial assistance",
            "B83": "student housing dormitories",
            "B84": "alumni associations educational institutions",
            "B90": "educational services other",
            "B92": "remedial education literacy basic skills",
            "B94": "parent teacher groups education support",
            "B99": "education other",
            # Environment (C)
            "C01": "alliances coordination environmental",
            "C02": "management technical assistance environmental",
            "C03": "professional societies environmental",
            "C05": "research institutes environmental",
            "C11": "single organization support environmental",
            "C12": "fundraising environmental",
            "C19": "support environmental general",
            "C20": "pollution control environmental protection",
            "C27": "recycling waste reduction environmental",
            "C30": "natural resources conservation wildlife",
            "C32": "water resources conservation management",
            "C34": "land resources conservation preservation",
            "C35": "energy conservation renewable energy",
            "C36": "forest conservation forestry",
            "C40": "botanical gardens parks recreation",
            "C41": "botanical gardens horticulture",
            "C42": "parks recreation environmental",
            "C50": "environmental education awareness",
            "C60": "environmental health public health",
            "C99": "environmental other",
            # Animal-Related (D)
            "D01": "alliances coordination animal",
            "D02": "management technical assistance animal",
            "D03": "professional societies animal",
            "D05": "research institutes animal",
            "D11": "single organization support animal",
            "D12": "fundraising animal",
            "D19": "support animal general",
            "D20": "animal protection welfare rights",
            "D30": "wildlife preservation endangered species",
            "D31": "wildlife sanctuaries preservation",
            "D32": "bird preservation ornithology",
            "D33": "marine life ocean conservation",
            "D34": "animal training services",
            "D40": "veterinary medicine animal health",
            "D50": "zoos aquariums animal education",
            "D60": "animal services pets domestic animals",
            "D61": "animal shelters rescue adoption",
            "D99": "animal related other",
            # Health (E)
            "E01": "alliances coordination health",
            "E02": "management technical assistance health",
            "E03": "professional societies health",
            "E05": "research institutes health medical",
            "E11": "single organization support health",
            "E12": "fundraising health medical",
            "E19": "support health general",
            "E20": "hospitals medical care facilities",
            "E21": "community health centers clinics",
            "E22": "hospital systems medical centers",
            "E24": "specialty hospitals medical care",
            "E30": "outpatient medical care clinics",
            "E31": "group health practice medical",
            "E32": "home health care services",
            "E40": "reproductive health family planning",
            "E42": "family planning reproductive services",
            "E50": "rehabilitative medical services therapy",
            "E60": "health support services patient care",
            "E61": "blood supply donation services",
            "E62": "emergency medical services ambulance",
            "E65": "organ tissue donation transplant",
            "E70": "public health education prevention",
            "E80": "health care financing insurance",
            "E86": "patient services health support",
            "E90": "nursing services elderly care",
            "E91": "nursing homes long term care",
            "E92": "home nursing services health",
            "E99": "health other",
            # Mental Health (F)
            "F01": "alliances coordination mental health",
            "F02": "management technical assistance mental health",
            "F03": "professional societies mental health",
            "F05": "research institutes mental health",
            "F11": "single organization support mental health",
            "F12": "fundraising mental health",
            "F19": "support mental health general",
            "F20": "substance abuse addiction treatment",
            "F21": "drug abuse addiction treatment",
            "F22": "alcohol abuse addiction treatment",
            "F30": "mental health treatment counseling",
            "F31": "psychiatric hospitals mental health",
            "F32": "community mental health centers",
            "F33": "group homes mental health residential",
            "F40": "hot lines crisis intervention",
            "F42": "crisis intervention emergency mental health",
            "F50": "smoking cessation addiction",
            "F52": "smoking prevention tobacco control",
            "F53": "eating disorders treatment",
            "F54": "suicide prevention crisis intervention",
            "F60": "counseling support groups therapy",
            "F70": "residential mental health facilities",
            "F80": "mental health support services",
            "F99": "mental health other",
            # Voluntary Health Associations & Medical Disciplines (G)
            "G01": "alliances coordination voluntary health",
            "G02": "management technical assistance voluntary health",
            "G03": "professional societies voluntary health",
            "G05": "research institutes voluntary health",
            "G11": "single organization support voluntary health",
            "G12": "fundraising voluntary health",
            "G19": "support voluntary health general",
            "G20": "birth defects genetic diseases",
            "G25": "down syndrome genetic disorders",
            "G30": "cancer research treatment support",
            "G32": "breast cancer research support",
            "G40": "diseases disorders medical conditions",
            "G41": "kidney disease treatment research",
            "G42": "heart cardiovascular disease",
            "G43": "lung respiratory disease",
            "G44": "eye diseases blindness vision",
            "G45": "diabetes research treatment",
            "G48": "brain disorders neurological",
            "G50": "nerve muscle bone diseases",
            "G51": "arthritis musculoskeletal diseases",
            "G54": "epilepsy neurological disorders",
            "G60": "allergy asthma respiratory",
            "G61": "alzheimers disease dementia",
            "G70": "digestive diseases disorders",
            "G80": "specifically named diseases",
            "G81": "aids HIV research support",
            "G83": "parkinsons disease research",
            "G84": "multiple sclerosis research",
            "G90": "medical research general",
            "G92": "biomedicine biomedical research",
            "G94": "foot problems podiatric",
            "G96": "organ diseases research",
            "G98": "pediatric medicine children health",
            "G99": "voluntary health other",
            # Human Services (P)
            "P01": "alliances coordination human services",
            "P02": "management technical assistance human services",
            "P03": "professional societies human services",
            "P05": "research institutes human services",
            "P11": "single organization support human services",
            "P12": "fundraising human services",
            "P19": "support human services general",
            "P20": "disaster relief emergency response humanitarian aid",
            "P21": "american red cross disaster relief",
            "P22": "refugee assistance immigration services",
            "P23": "salvation army human services",
            "P24": "goodwill industries human services",
            "P26": "volunteer administration coordination",
            "P27": "volunteer bureaus community service",
            "P28": "volunteer matching services",
            "P30": "children youth services development",
            "P31": "adoption foster care services",
            "P32": "ymca ywca youth services",
            "P33": "boys girls clubs youth development",
            "P34": "scouting youth character development",
            "P35": "youth centers programs development",
            "P36": "camping youth outdoor education",
            "P37": "community service clubs youth",
            "P40": "family services counseling support",
            "P42": "single parent family support",
            "P43": "family violence domestic abuse",
            "P44": "spouse abuse domestic violence",
            "P45": "child abuse prevention protection",
            "P46": "family counseling therapy services",
            "P47": "pregnancy centers family support",
            "P50": "personal social services counseling",
            "P51": "financial counseling budgeting services",
            "P52": "transportation services community",
            "P58": "gift distribution charity programs",
            "P60": "emergency assistance basic needs",
            "P61": "travelers aid transportation assistance",
            "P62": "victims services support programs",
            "P70": "residential custodial care services",
            "P71": "adult day care services",
            "P72": "halfway houses transitional housing",
            "P73": "group homes residential care",
            "P74": "hospice palliative care services",
            "P75": "senior centers elderly services",
            "P76": "senior housing elderly care",
            "P80": "centers services handicapped disabled",
            "P81": "senior citizens services elderly",
            "P82": "developmentally disabled services",
            "P84": "ethnic minority services",
            "P85": "womens centers services",
            "P86": "blind visually impaired services",
            "P87": "deaf hearing impaired services",
            "P99": "human services other",
            # International (Q)
            "Q01": "alliances coordination international",
            "Q02": "management technical assistance international",
            "Q03": "professional societies international",
            "Q05": "research institutes international",
            "Q11": "single organization support international",
            "Q12": "fundraising international",
            "Q19": "support international general",
            "Q20": "international development aid",
            "Q21": "international relief services",
            "Q22": "international disaster relief",
            "Q23": "international human rights",
            "Q30": "international agricultural development",
            "Q31": "international economic development",
            "Q32": "international community development",
            "Q33": "international democracy governance",
            "Q40": "international peace security",
            "Q41": "arms control international peace",
            "Q42": "united nations international cooperation",
            "Q43": "national security international affairs",
            "Q50": "international cultural exchange",
            "Q51": "international student exchange",
            "Q70": "international migration refugee",
            "Q71": "international refugee assistance",
            "Q99": "international other",
            # Civil Rights (R)
            "R01": "alliances coordination civil rights",
            "R02": "management technical assistance civil rights",
            "R03": "professional societies civil rights",
            "R05": "research institutes civil rights",
            "R11": "single organization support civil rights",
            "R12": "fundraising civil rights",
            "R19": "support civil rights general",
            "R20": "intergroup race relations",
            "R22": "minority rights civil rights",
            "R23": "disabled persons rights advocacy",
            "R24": "womens rights gender equality",
            "R25": "seniors rights elderly advocacy",
            "R26": "lesbian gay bisexual rights",
            "R27": "indigenous peoples rights",
            "R28": "children rights youth advocacy",
            "R30": "voter education registration",
            "R40": "reproductive rights family planning",
            "R60": "civil liberties individual rights",
            "R61": "reproductive freedom choice",
            "R62": "right to life anti abortion",
            "R63": "censorship freedom expression",
            "R67": "right to die death dignity",
            "R99": "civil rights other",
            # Community Improvement (S)
            "S01": "alliances coordination community improvement",
            "S02": "management technical assistance community improvement",
            "S03": "professional societies community improvement",
            "S05": "research institutes community improvement",
            "S11": "single organization support community improvement",
            "S12": "fundraising community improvement",
            "S19": "support community improvement general",
            "S20": "community economic development",
            "S21": "community coalitions social change",
            "S22": "neighborhood development community",
            "S30": "urban community development",
            "S31": "urban development city planning",
            "S32": "rural development community",
            "S40": "business promotion economic development",
            "S41": "chambers commerce business",
            "S43": "boards trade business promotion",
            "S46": "economic development business",
            "S47": "community development corporations",
            "S50": "housing development affordable housing",
            "S80": "community service clubs civic",
            "S81": "womens service clubs community",
            "S82": "mens service clubs community",
            "S99": "community improvement other",
            # Philanthropy (T)
            "T01": "alliances coordination philanthropy",
            "T02": "management technical assistance philanthropy",
            "T03": "professional societies philanthropy",
            "T05": "research institutes philanthropy",
            "T11": "single organization support philanthropy",
            "T12": "fundraising philanthropy",
            "T19": "support philanthropy general",
            "T20": "private foundations grantmaking",
            "T21": "community foundations local grantmaking",
            "T22": "corporate foundations business philanthropy",
            "T23": "private operating foundations",
            "T30": "public foundations fundraising",
            "T31": "community fundraising united way",
            "T40": "voluntary fundraising",
            "T50": "fundraising services philanthropy",
            "T70": "federated giving programs",
            "T90": "named trusts foundations",
            "T92": "named foundations philanthropy",
            "T99": "philanthropy other",
            # Science & Technology (U)
            "U01": "alliances coordination science technology",
            "U02": "management technical assistance science technology",
            "U03": "professional societies science technology",
            "U05": "research institutes science technology",
            "U11": "single organization support science technology",
            "U12": "fundraising science technology",
            "U19": "support science technology general",
            "U20": "general science research",
            "U21": "marine science oceanography",
            "U30": "physical earth sciences",
            "U31": "astronomy space science",
            "U33": "chemistry chemical sciences",
            "U34": "mathematics computer science",
            "U40": "engineering technology",
            "U41": "computer science information technology",
            "U42": "engineering research development",
            "U50": "biological life sciences",
            "U99": "science technology other",
            # Social Science (V)
            "V01": "alliances coordination social science",
            "V02": "management technical assistance social science",
            "V03": "professional societies social science",
            "V05": "research institutes social science",
            "V11": "single organization support social science",
            "V12": "fundraising social science",
            "V19": "support social science general",
            "V20": "social science research",
            "V21": "anthropology sociology social research",
            "V22": "economics economic research",
            "V23": "behavioral science psychology",
            "V24": "political science government",
            "V25": "population studies demographics",
            "V26": "law legal research",
            "V30": "interdisciplinary research",
            "V31": "black studies african american",
            "V32": "womens studies gender research",
            "V33": "ethnic studies cultural research",
            "V34": "urban studies city research",
            "V35": "international studies global research",
            "V36": "gerontology aging research",
            "V37": "labor studies employment research",
            "V99": "social science other",
            # Public Safety (I)
            "I01": "alliances coordination public safety",
            "I02": "management technical assistance public safety",
            "I03": "professional societies public safety",
            "I05": "research institutes public safety",
            "I11": "single organization support public safety",
            "I12": "fundraising public safety",
            "I19": "support public safety general",
            "I20": "crime prevention law enforcement",
            "I21": "youth violence prevention",
            "I23": "drunk driving prevention",
            "I30": "correctional facilities prison reform",
            "I31": "halfway houses criminal justice",
            "I40": "fire prevention protection",
            "I43": "ambulance emergency medical",
            "I44": "rescue squad emergency services",
            "I50": "administration justice legal",
            "I51": "law enforcement police",
            "I60": "court administration legal",
            "I70": "protection against abuse",
            "I71": "spouse abuse prevention",
            "I72": "child abuse prevention",
            "I73": "sexual abuse prevention",
            "I80": "legal services advocacy",
            "I83": "public interest law",
            "I99": "public safety other",
            # Recreation & Sports (N)
            "N01": "alliances coordination recreation sports",
            "N02": "management technical assistance recreation sports",
            "N03": "professional societies recreation sports",
            "N05": "research institutes recreation sports",
            "N11": "single organization support recreation sports",
            "N12": "fundraising recreation sports",
            "N19": "support recreation sports general",
            "N20": "camps recreation outdoor education",
            "N30": "physical fitness sports",
            "N31": "olympic sports training",
            "N32": "baseball softball sports",
            "N40": "sports training facilities",
            "N50": "travel tours recreation",
            "N60": "amateur radio communications",
            "N61": "fishing hunting outdoor sports",
            "N62": "aviation flying sports",
            "N63": "outdoor survival wilderness",
            "N64": "game bird fish preservation",
            "N65": "boating water sports",
            "N66": "skiing snow sports",
            "N67": "swimming aquatic sports",
            "N68": "winter sports recreation",
            "N69": "equestrian horse sports",
            "N70": "amateur sports competition",
            "N71": "olympics special olympics",
            "N72": "amateur athletic competition",
            "N80": "recreational facilities community",
            "N99": "recreation sports other",
            # Youth Development (O)
            "O01": "alliances coordination youth development",
            "O02": "management technical assistance youth development",
            "O03": "professional societies youth development",
            "O05": "research institutes youth development",
            "O11": "single organization support youth development",
            "O12": "fundraising youth development",
            "O19": "support youth development general",
            "O20": "youth centers programs",
            "O21": "boys girls clubs",
            "O22": "ymca ywca youth services",
            "O23": "scouting character building",
            "O30": "youth sports athletics",
            "O31": "little league youth baseball",
            "O40": "youth mentoring guidance",
            "O41": "big brothers big sisters",
            "O42": "4-H youth development",
            "O43": "junior achievement youth business",
            "O50": "youth development programs",
            "O51": "youth leadership development",
            "O52": "youth employment job training",
            "O53": "youth pregnancy prevention",
            "O54": "youth substance abuse prevention",
            "O55": "youth violence prevention",
            "O99": "youth development other",
            # Religion Related (X)
            "X01": "alliances coordination religion",
            "X02": "management technical assistance religion",
            "X03": "professional societies religion",
            "X05": "research institutes religion",
            "X11": "single organization support religion",
            "X12": "fundraising religion",
            "X19": "support religion general",
            "X20": "christian denominations",
            "X21": "protestant christian",
            "X22": "roman catholic christian",
            "X30": "jewish religion",
            "X40": "islamic religion",
            "X50": "buddhist religion",
            "X70": "hindu religion",
            "X80": "religious media communications",
            "X81": "religious film radio tv",
            "X82": "religious printing publishing",
            "X84": "religious television broadcasting",
            "X90": "interfaith religious coalitions",
            "X99": "religion related other",
            # Mutual Benefit Organizations (Y)
            "Y01": "alliances coordination mutual benefit",
            "Y02": "management technical assistance mutual benefit",
            "Y03": "professional societies mutual benefit",
            "Y05": "research institutes mutual benefit",
            "Y11": "single organization support mutual benefit",
            "Y12": "fundraising mutual benefit",
            "Y19": "support mutual benefit general",
            "Y20": "insurance mutual benefit",
            "Y22": "local benevolent life insurance",
            "Y23": "mutual insurance companies",
            "Y24": "supplemental unemployment compensation",
            "Y25": "state chartered credit unions",
            "Y30": "pension retirement funds",
            "Y33": "teachers retirement fund",
            "Y34": "employee funded pension trust",
            "Y35": "multi employer pension plans",
            "Y40": "fraternal beneficiary societies",
            "Y41": "fraternal lodges societies",
            "Y42": "domestic fraternal societies",
            "Y43": "voluntary employees beneficiary",
            "Y44": "voluntary employees associations",
            "Y50": "cemeteries burial services",
            "Y99": "mutual benefit other",
            # Unknown/Unclassified (Z)
            "Z99": "unknown unclassified nonprofit",
        }

    def _build_subsection_mappings(self) -> Dict[int, str]:
        """Build 501(c) subsection code mappings."""
        return {
            3: "charitable religious educational scientific organizations",
            4: "social welfare civic leagues",
            5: "labor agricultural horticultural organizations",
            6: "business leagues chambers commerce",
            7: "social recreational clubs",
            8: "fraternal beneficiary societies lodges",
            9: "voluntary employees beneficiary associations",
            10: "domestic fraternal societies lodges",
            11: "teachers retirement fund associations",
            12: "benevolent life insurance associations",
            13: "cemetery burial companies",
            14: "credit unions mutual reserve funds",
            15: "mutual insurance companies",
            16: "cooperative organizations financing crop operations",
            17: "supplemental unemployment benefit trusts",
            18: "employee funded pension trusts",
            19: "post military organizations veterans",
            21: "black lung benefit trusts",
            22: "withdrawal liability payment funds",
            23: "veterans organizations pre-1880",
            25: "title holding corporations",
            26: "state chartered credit unions",
            27: "state chartered workers compensation",
            28: "national railroad retirement investment trust",
            29: "qualified nonprofit health insurance",
            92: "private foundation supporting organizations",
        }

    def expand_ntee_code(self, ntee_code: str) -> str:
        """Expand NTEE code to descriptive keywords."""
        if not ntee_code:
            return ""

        # Handle exact matches first
        if ntee_code in self.ntee_mappings:
            return self.ntee_mappings[ntee_code]

        # Handle partial matches (e.g., A20 might match A2* pattern)
        # Try 3-char, then 2-char, then 1-char matches
        for length in [3, 2, 1]:
            partial_code = ntee_code[:length]
            if partial_code in self.ntee_mappings:
                return self.ntee_mappings[partial_code]

        # Fallback to major category description
        if ntee_code and len(ntee_code) > 0:
            major_category = ntee_code[0].upper()
            category_names = {
                "A": "arts culture humanities",
                "B": "education schools learning",
                "C": "environmental conservation",
                "D": "animal wildlife protection",
                "E": "health medical care",
                "F": "mental health behavioral health",
                "G": "disease research medical conditions",
                "H": "medical research health",
                "I": "public safety crime prevention",
                "J": "employment job training",
                "K": "food agriculture nutrition",
                "L": "housing shelter development",
                "M": "public safety disaster relief",
                "N": "recreation sports fitness",
                "O": "youth development services",
                "P": "human services social services",
                "Q": "international foreign affairs",
                "R": "civil rights advocacy",
                "S": "community development improvement",
                "T": "philanthropy grantmaking foundations",
                "U": "science technology research",
                "V": "social science research",
                "W": "public benefit society",
                "X": "religion faith based",
                "Y": "mutual benefit organizations",
                "Z": "unknown unclassified",
            }
            return category_names.get(major_category, "nonprofit organization")

        return "nonprofit organization"

    def expand_subsection_code(self, subseccd: int) -> str:
        """Expand 501(c) subsection code to description."""
        if not subseccd:
            return "nonprofit organization"
        return self.subsection_mappings.get(subseccd, "nonprofit organization")

    def build_searchable_text(self, org_data: dict) -> str:
        """Build comprehensive searchable text from organization data."""
        components = []

        # Add organization name and sub_name
        if org_data.get("name"):
            components.append(org_data["name"])
        if org_data.get("sub_name"):
            components.append(org_data["sub_name"])

        # Add expanded NTEE keywords
        if org_data.get("ntee_code"):
            ntee_expansion = self.expand_ntee_code(org_data["ntee_code"])
            if ntee_expansion:
                components.append(ntee_expansion)

        # Add subsection description
        if org_data.get("subseccd"):
            subsection_desc = self.expand_subsection_code(org_data["subseccd"])
            components.append(subsection_desc)

        # Add geographic information
        geographic_terms = []
        if org_data.get("city"):
            geographic_terms.append(org_data["city"])
        if org_data.get("state"):
            geographic_terms.append(org_data["state"])
            # Add state name expansion
            state_names = {
                "CA": "California",
                "NY": "New York",
                "TX": "Texas",
                "FL": "Florida",
                "IL": "Illinois",
                "PA": "Pennsylvania",
                "OH": "Ohio",
                "GA": "Georgia",
                "NC": "North Carolina",
                "MI": "Michigan",
                "NJ": "New Jersey",
                "VA": "Virginia",
                "WA": "Washington",
                "AZ": "Arizona",
                "MA": "Massachusetts",
                "TN": "Tennessee",
                "IN": "Indiana",
                "MO": "Missouri",
                "MD": "Maryland",
                "WI": "Wisconsin",
                "CO": "Colorado",
                "MN": "Minnesota",
                "SC": "South Carolina",
                "AL": "Alabama",
                "LA": "Louisiana",
                "KY": "Kentucky",
                "OR": "Oregon",
                "OK": "Oklahoma",
                "CT": "Connecticut",
                "UT": "Utah",
                "IA": "Iowa",
                "NV": "Nevada",
                "AR": "Arkansas",
                "MS": "Mississippi",
                "KS": "Kansas",
                "NM": "New Mexico",
                "NE": "Nebraska",
                "WV": "West Virginia",
                "ID": "Idaho",
                "HI": "Hawaii",
                "NH": "New Hampshire",
                "ME": "Maine",
                "RI": "Rhode Island",
                "MT": "Montana",
                "DE": "Delaware",
                "SD": "South Dakota",
                "ND": "North Dakota",
                "AK": "Alaska",
                "VT": "Vermont",
                "WY": "Wyoming",
                "DC": "Washington DC",
            }
            state_code = org_data["state"].upper()
            if state_code in state_names:
                geographic_terms.append(state_names[state_code])

        if geographic_terms:
            components.extend(geographic_terms)

        # Add generic nonprofit terms for better matching
        components.extend(["nonprofit", "organization", "foundation"])

        # Join and clean up the text
        searchable_text = " ".join(components)
        # Remove extra whitespace and normalize
        searchable_text = " ".join(searchable_text.split())

        return searchable_text.lower()

    def extract_query_components(self, query: str) -> Dict[str, List[str]]:
        """Extract components from a natural language query."""
        query_lower = query.lower()

        # Geographic terms
        states = {
            "alabama": "AL",
            "alaska": "AK",
            "arizona": "AZ",
            "arkansas": "AR",
            "california": "CA",
            "colorado": "CO",
            "connecticut": "CT",
            "delaware": "DE",
            "florida": "FL",
            "georgia": "GA",
            "hawaii": "HI",
            "idaho": "ID",
            "illinois": "IL",
            "indiana": "IN",
            "iowa": "IA",
            "kansas": "KS",
            "kentucky": "KY",
            "louisiana": "LA",
            "maine": "ME",
            "maryland": "MD",
            "massachusetts": "MA",
            "michigan": "MI",
            "minnesota": "MN",
            "mississippi": "MS",
            "missouri": "MO",
            "montana": "MT",
            "nebraska": "NE",
            "nevada": "NV",
            "new hampshire": "NH",
            "new jersey": "NJ",
            "new mexico": "NM",
            "new york": "NY",
            "north carolina": "NC",
            "north dakota": "ND",
            "ohio": "OH",
            "oklahoma": "OK",
            "oregon": "OR",
            "pennsylvania": "PA",
            "rhode island": "RI",
            "south carolina": "SC",
            "south dakota": "SD",
            "tennessee": "TN",
            "texas": "TX",
            "utah": "UT",
            "vermont": "VT",
            "virginia": "VA",
            "washington": "WA",
            "west virginia": "WV",
            "wisconsin": "WI",
            "wyoming": "WY",
        }

        geographic = []
        for state_name, state_code in states.items():
            if state_name in query_lower or state_code.lower() in query_lower:
                geographic.append(state_code)

        # Cause area mappings (reverse lookup from NTEE descriptions)
        cause_mappings = {
            "education": ["B20", "B21", "B24", "B25"],
            "early childhood": ["B21"],
            "preschool": ["B21"],
            "elementary": ["B24"],
            "secondary": ["B25"],
            "health": ["E20", "E30", "E70"],
            "mental health": ["F30", "F40"],
            "environment": ["C20", "C30", "C50"],
            "arts": ["A20", "A40", "A60"],
            "culture": ["A20", "A23", "A50"],
            "disaster relief": ["P20", "P21"],
            "youth": ["O20", "P30", "P33"],
            "children": ["P30", "P31"],
            "family": ["P40", "P42"],
            "homeless": ["P60", "P70"],
            "elderly": ["P75", "P81"],
            "disabled": ["P80", "P82"],
            "animal": ["D20", "D30"],
            "wildlife": ["D30", "D31"],
            "veterans": ["W30"],
            "civil rights": ["R20", "R22"],
            "community": ["S20", "S30"],
            "housing": ["S50"],
            "international": ["Q20", "Q30"],
            "science": ["U20", "U40"],
        }

        cause_areas = []
        for cause, codes in cause_mappings.items():
            if cause in query_lower:
                cause_areas.extend(codes)

        return {
            "geographic": geographic,
            "cause_areas": list(set(cause_areas)),  # Remove duplicates
            "raw_query": query,
        }
